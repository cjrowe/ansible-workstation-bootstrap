---
- name: Pre-requisites for yay AUR Helper
  when: ansible_facts['os_family'] == 'Artix Linux'
  become: True
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  with_items: 
    - base-devel
    - git
    - go

- name: Create user for building from AUR repos
  when: ansible_facts['os_family'] == 'Artix Linux'
  become: True
  user: 
    name: "{{ aur_builder_user_name }}"

- name: Allow AUR Builder user to sudo
  when: ansible_facts['os_family'] == 'Artix Linux'
  become: True
  lineinfile:
     path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
     state: present
     line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
     validate: /usr/sbin/visudo -cf %s
     create: yes

- name: Clone yay source
  when: ansible_facts['os_family'] == 'Artix Linux'
  ansible.builtin.git:
    repo: https://aur.archlinux.org/yay.git
    dest: /home/{{ user_name }}/{{ source_clone_dir }}/yay

- name: Build yay package from source
  when: ansible_facts['os_family'] == 'Artix Linux'
  ansible.builtin.shell: makepkg -fs
  args:
    chdir: /home/{{ user_name }}/{{ source_clone_dir }}/yay

- name: Find built yay binary package
  ansible.builtin.find:
    paths: /home/{{ user_name }}/{{ source_clone_dir }}/yay
    patterns: 'yay-*.pkg.tar.zst'
  register: yay_packages

- name: Install yay package
  when: ansible_facts['os_family'] == 'Artix Linux'
  become: True
  community.general.pacman:
    name: "{{ yay_packages.files | map(attribute='path') | sort(reverse=True) | first }}"
    state: present

- name: Install AUR packages
  community.general.pacman:
    name: "{{ item }}"
    state: latest
    executable: yay
  with_items: 
    - bat
    - exa
    
- name: Install common libraries & utilities
  become: True
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  with_items: 
    - "{{ common_packages }}"
